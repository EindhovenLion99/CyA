]0;~/Practica 2[01;34m~/Practica 2[00m$ ls
Analyzer.cpp    OPERADORES.txt  fichero_entrada.txt  word_analyzer.cpp
ESPECIALES.txt  SIGNO.txt       fichero_salida.txt   word_analyzer.h
]0;~/Practica 2[01;34m~/Practica 2[00m$ g++ main[K[K[K[Kan[K[K[K Analyzer.cpp woe[Krd_analyzer.cpp 
[01m[KAnalyzer.cpp:11:25:[m[K [01;31m[Kerror: [m[Kstray â€˜[01m[K\302[m[Kâ€™ in program
   if (argv[1] == NULL ||[01;31m[Kï¿½[m[Kï¿½argv[2] == NULL) {
                         [01;31m[K^[m[K
[01m[KAnalyzer.cpp:11:26:[m[K [01;31m[Kerror: [m[Kstray â€˜[01m[K\240[m[Kâ€™ in program
   if (argv[1] == NULL ||ï¿½[01;31m[Kï¿½[m[Kargv[2] == NULL) {
                          [01;31m[K^[m[K
[01m[KAnalyzer.cpp:9:5:[m[K [01;35m[Kwarning: [m[Kfirst argument of â€˜[01m[Kint main(char, char**)[m[Kâ€™ should be â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wmain[m[K]
 int [01;35m[Kmain[m[K(char argc, char* argv[])
     [01;35m[K^~~~[m[K
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(char, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:27:67:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::analyzer_t(const char [15], const char [10], const char [15])[m[Kâ€™
       analyzer_t T("ESPECIALES.txt", "SIGNO.txt", "OPERADORES.txt"[01;31m[K)[m[K;
                                                                   [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:19:5:[m[K [01;36m[Knote: [m[Kcandidate: analyzer_t::analyzer_t()
     [01;36m[Kanalyzer_t[m[K();
     [01;36m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.h:19:5:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 3 provided
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[Kcandidate: analyzer_t::analyzer_t(const analyzer_t&)
 class [01;36m[Kanalyzer_t[m[K {
       [01;36m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[Kcandidate: analyzer_t::analyzer_t(analyzer_t&&)
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[KAnalyzer.cpp:28:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Comparation(std::ifstream&, std::ofstream&)[m[Kâ€™
       T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                          [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Comparation(char*)
     void [01;36m[KComparation[m[K(char* file);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[Kword_analyzer.cpp:5:1:[m[K [01;31m[Kerror: [m[Kprototype for â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™ does not match any in class â€˜[01m[Kanalyzer_t[m[Kâ€™
 [01;31m[Kanalyzer_t[m[K::analyzer_t(string file1, string file2, string file3) {
 [01;31m[K^~~~~~~~~~[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:9:7:[m[K [01;31m[Kerror: [m[Kcandidates are: analyzer_t::analyzer_t(analyzer_t&&)
 class [01;31m[Kanalyzer_t[m[K {
       [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.h:9:7:[m[K [01;31m[Kerror: [m[K                analyzer_t::analyzer_t(const analyzer_t&)
[01m[Kword_analyzer.h:19:5:[m[K [01;31m[Kerror: [m[K                analyzer_t::analyzer_t()
     [01;31m[Kanalyzer_t[m[K();
     [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(char file) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write("fichero_salida.txt", "INT", word)[01;31m[K;[m[K
                                                          [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write("fichero_salida.txt", "FLOAT", word)[01;31m[K;[m[K
                                                              [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:9:5:[m[K [01;35m[Kwarning: [m[Kfirst argument of â€˜[01m[Kint main(char, char**)[m[Kâ€™ should be â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wmain[m[K]
 int [01;35m[Kmain[m[K(char argc, char* argv[])
     [01;35m[K^~~~[m[K
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(char, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:27:67:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::analyzer_t(const char [15], const char [10], const char [15])[m[Kâ€™
       analyzer_t T("ESPECIALES.txt", "SIGNO.txt", "OPERADORES.txt"[01;31m[K)[m[K;
                                                                   [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:19:5:[m[K [01;36m[Knote: [m[Kcandidate: analyzer_t::analyzer_t()
     [01;36m[Kanalyzer_t[m[K();
     [01;36m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.h:19:5:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 3 provided
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[Kcandidate: analyzer_t::analyzer_t(const analyzer_t&)
 class [01;36m[Kanalyzer_t[m[K {
       [01;36m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[Kcandidate: analyzer_t::analyzer_t(analyzer_t&&)
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 3 provided
[01m[KAnalyzer.cpp:28:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Comparation(std::ifstream&, std::ofstream&)[m[Kâ€™
       T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                          [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Comparation(char*)
     void [01;36m[KComparation[m[K(char* file);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[Kword_analyzer.cpp:5:1:[m[K [01;31m[Kerror: [m[Kprototype for â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™ does not match any in class â€˜[01m[Kanalyzer_t[m[Kâ€™
 [01;31m[Kanalyzer_t[m[K::analyzer_t(string file1, string file2, string file3) {
 [01;31m[K^~~~~~~~~~[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:9:7:[m[K [01;31m[Kerror: [m[Kcandidates are: analyzer_t::analyzer_t(analyzer_t&&)
 class [01;31m[Kanalyzer_t[m[K {
       [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.h:9:7:[m[K [01;31m[Kerror: [m[K                analyzer_t::analyzer_t(const analyzer_t&)
[01m[Kword_analyzer.h:19:5:[m[K [01;31m[Kerror: [m[K                analyzer_t::analyzer_t()
     [01;31m[Kanalyzer_t[m[K();
     [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(char file) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write("fichero_salida.txt", "INT", word)[01;31m[K;[m[K
                                                          [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write("fichero_salida.txt", "FLOAT", word)[01;31m[K;[m[K
                                                              [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:9:5:[m[K [01;35m[Kwarning: [m[Kfirst argument of â€˜[01m[Kint main(char, char**)[m[Kâ€™ should be â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wmain[m[K]
 int [01;35m[Kmain[m[K(char argc, char* argv[])
     [01;35m[K^~~~[m[K
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(char, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:28:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Comparation(std::ifstream&, std::ofstream&)[m[Kâ€™
       T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                          [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Comparation(char*)
     void [01;36m[KComparation[m[K(char* file);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(char file) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write("fichero_salida.txt", "INT", word)[01;31m[K;[m[K
                                                          [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write("fichero_salida.txt", "FLOAT", word)[01;31m[K;[m[K
                                                              [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:9:5:[m[K [01;35m[Kwarning: [m[Kfirst argument of â€˜[01m[Kint main(char, char**)[m[Kâ€™ should be â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wmain[m[K]
 int [01;35m[Kmain[m[K(char argc, char* argv[])
     [01;35m[K^~~~[m[K
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(char, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:28:31:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Comparation(std::ifstream&)[m[Kâ€™
       T.Comparation(Entry_File[01;31m[K)[m[K;
                               [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Comparation(char*)
     void [01;36m[KComparation[m[K(char* file);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::ifstream {aka std::basic_ifstream<char>}[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(char file) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write("fichero_salida.txt", "INT", word)[01;31m[K;[m[K
                                                          [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write("fichero_salida.txt", "FLOAT", word)[01;31m[K;[m[K
                                                              [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:9:5:[m[K [01;35m[Kwarning: [m[Kfirst argument of â€˜[01m[Kint main(char, char**)[m[Kâ€™ should be â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wmain[m[K]
 int [01;35m[Kmain[m[K(char argc, char* argv[])
     [01;35m[K^~~~[m[K
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(char, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:28:31:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Comparation(std::ifstream&)[m[Kâ€™
       T.Comparation(Entry_File[01;31m[K)[m[K;
                               [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Comparation(char*)
     void [01;36m[KComparation[m[K(char* file);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::ifstream {aka std::basic_ifstream<char>}[m[Kâ€™ to â€˜[01m[Kchar*[m[Kâ€™
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(string file) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(std::__cxx11::string)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write("fichero_salida.txt", "INT", word)[01;31m[K;[m[K
                                                          [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write("fichero_salida.txt", "FLOAT", word)[01;31m[K;[m[K
                                                              [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:9:5:[m[K [01;35m[Kwarning: [m[Kfirst argument of â€˜[01m[Kint main(char, char**)[m[Kâ€™ should be â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wmain[m[K]
 int [01;35m[Kmain[m[K(char argc, char* argv[])
     [01;35m[K^~~~[m[K
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(char, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:28:31:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Comparation(std::ifstream&)[m[Kâ€™
       T.Comparation(Entry_File[01;31m[K)[m[K;
                               [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Comparation(std::__cxx11::string)
     void [01;36m[KComparation[m[K(string file);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::ifstream {aka std::basic_ifstream<char>}[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::string {aka std::__cxx11::basic_string<char>}[m[Kâ€™
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(string file) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(std::__cxx11::string)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write("fichero_salida.txt", "INT", word)[01;31m[K;[m[K
                                                          [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write("fichero_salida.txt", "FLOAT", word)[01;31m[K;[m[K
                                                              [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:28:31:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Comparation(std::ifstream&)[m[Kâ€™
       T.Comparation(Entry_File[01;31m[K)[m[K;
                               [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Comparation(std::__cxx11::string)
     void [01;36m[KComparation[m[K(string file);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::ifstream {aka std::basic_ifstream<char>}[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::string {aka std::__cxx11::basic_string<char>}[m[Kâ€™
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(string file) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(std::__cxx11::string)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K("fichero_salida.txt", "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write("fichero_salida.txt", "INT", word)[01;31m[K;[m[K
                                                          [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:58:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write("fichero_salida.txt", "FLOAT", word)[01;31m[K;[m[K
                                                              [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:62:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:28:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Comparation(std::ifstream&, std::ofstream&)[m[Kâ€™
       T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                          [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Comparation(std::__cxx11::string, std::__cxx11::string)
     void [01;36m[KComparation[m[K(string file, string file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::ifstream {aka std::basic_ifstream<char>}[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::string {aka std::__cxx11::basic_string<char>}[m[Kâ€™
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(string file, string file2) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(std::__cxx11::string, std::__cxx11::string)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string, std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(std::__cxx11::string, std::__cxx11::string)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string, std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string, std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(std::__cxx11::string, std::__cxx11::string)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K(file2, "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K(file2, "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write(file2, "INT", word)[01;31m[K;[m[K
                                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write(file2, "FLOAT", word)[01;31m[K;[m[K
                                               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:28:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Comparation(std::ifstream&, std::ofstream&)[m[Kâ€™
       T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                          [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Comparation(char, char)
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::ifstream {aka std::basic_ifstream<char>}[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(char file, char file2) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K(file2, "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K(file2, "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write(file2, "INT", word)[01;31m[K;[m[K
                                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write(file2, "FLOAT", word)[01;31m[K;[m[K
                                               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:20:21:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kis_open[m[Kâ€™ in â€˜[01m[KEntry_File[m[Kâ€™, which is of non-class type â€˜[01m[Kchar*[m[Kâ€™
     if (!Entry_File.[01;31m[Kis_open[m[K() || !Exit_File.is_open()) {
                     [01;31m[K^~~~~~~[m[K
[01m[KAnalyzer.cpp:20:45:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kis_open[m[Kâ€™ in â€˜[01m[KExit_File[m[Kâ€™, which is of non-class type â€˜[01m[Kchar*[m[Kâ€™
     if (!Entry_File.is_open() || !Exit_File.[01;31m[Kis_open[m[K()) {
                                             [01;31m[K^~~~~~~[m[K
[01m[KAnalyzer.cpp:28:42:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
       T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                          [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:28:42:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
       T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                          [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(char file, char file2) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K(file2, "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K(file2, "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write(file2, "INT", word)[01;31m[K;[m[K
                                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write(file2, "FLOAT", word)[01;31m[K;[m[K
                                               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(char file, char file2) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kentry_file[m[Kâ€™ was not declared in this scope
   if (![01;31m[Kentry_file[m[K.is_open()) {
        [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KEntry_file[m[Kâ€™
   if (![01;36m[Kentry_file[m[K.is_open()) {
        [01;36m[K^~~~~~~~~~[m[K
        [32m[KEntry_file[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K(file2, "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K(file2, "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write(file2, "INT", word)[01;31m[K;[m[K
                                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write(file2, "FLOAT", word)[01;31m[K;[m[K
                                               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream Exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:93:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kexit_file[m[Kâ€™ was not declared in this scope
     [01;31m[Kexit_file[m[K << type << pal << endl;
     [01;31m[K^~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:93:5:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KExit_file[m[Kâ€™
     [01;36m[Kexit_file[m[K << type << pal << endl;
     [01;36m[K^~~~~~~~~[m[K
     [32m[KExit_file[m[K
[01m[Kword_analyzer.cpp:94:1:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K}[m[Kâ€™ at end of input
 [01;31m[K}[m[K
 [01;31m[K^[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:50:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KComparation[m[Kâ€™ has not been declared
 void [01;31m[KComparation[m[K::analyzer_t(char file, char file2) {
      [01;31m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kentry_file[m[Kâ€™ was not declared in this scope
   if (![01;31m[Kentry_file[m[K.is_open()) {
        [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KEntry_file[m[Kâ€™
   if (![01;36m[Kentry_file[m[K.is_open()) {
        [01;36m[K^~~~~~~~~~[m[K
        [32m[KEntry_file[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:18:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ was not declared in this scope
       match_int? [01;31m[KWrite[m[K(file2, "INT", word);
                  [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:71:18:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kfwrite[m[Kâ€™
       match_int? [01;36m[KWrite[m[K(file2, "INT", word);
                  [01;36m[K^~~~~[m[K
                  [32m[Kfwrite[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write(file2, "INT", word)[01;31m[K;[m[K
                                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write(file2, "FLOAT", word)[01;31m[K;[m[K
                                               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KWrite[m[Kâ€™ has not been declared
 void [01;31m[KWrite[m[K::analyzer_t(char file, string type, string pal) {
      [01;31m[K^~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In function â€˜[01m[Kvoid analyzer_t(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream Exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:93:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kexit_file[m[Kâ€™ was not declared in this scope
     [01;31m[Kexit_file[m[K << type << pal << endl;
     [01;31m[K^~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:93:5:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KExit_file[m[Kâ€™
     [01;36m[Kexit_file[m[K << type << pal << endl;
     [01;36m[K^~~~~~~~~[m[K
     [32m[KExit_file[m[K
[01m[Kword_analyzer.cpp:94:1:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K}[m[Kâ€™ at end of input
 [01;31m[K}[m[K
 [01;31m[K^[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kentry_file[m[Kâ€™ was not declared in this scope
   if (![01;31m[Kentry_file[m[K.is_open()) {
        [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KEntry_file[m[Kâ€™
   if (![01;36m[Kentry_file[m[K.is_open()) {
        [01;36m[K^~~~~~~~~~[m[K
        [32m[KEntry_file[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Write(char&, const char [4], std::__cxx11::string&)[m[Kâ€™
       match_int? Write(file2, "INT", word[01;31m[K)[m[K;
                                          [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;36m[KWrite[m[K(char* file, string type);
          [01;36m[K^~~~~[m[K
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write(file2, "INT", word)[01;31m[K;[m[K
                                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Write(char&, const char [6], std::__cxx11::string&)[m[Kâ€™
       match_float? Write(file2, "FLOAT", word[01;31m[K)[m[K;
                                              [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;36m[KWrite[m[K(char* file, string type);
          [01;36m[K^~~~~[m[K
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write(file2, "FLOAT", word)[01;31m[K;[m[K
                                               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kprototype for â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™ does not match any in class â€˜[01m[Kanalyzer_t[m[Kâ€™
 void [01;31m[Kanalyzer_t[m[K::Write(char file, string type, string pal) {
      [01;31m[K^~~~~~~~~~[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:21:10:[m[K [01;31m[Kerror: [m[Kcandidate is: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;31m[KWrite[m[K(char* file, string type);
          [01;31m[K^~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:20:16:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™
     analyzer_t [01;31m[KT[m[K;
                [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:19:5:[m[K [01;36m[Knote: [m[Kcandidate: analyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)
     [01;36m[Kanalyzer_t[m[K(string file, string file2, string file3);
     [01;36m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.h:19:5:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 0 provided
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[Kcandidate: analyzer_t::analyzer_t(const analyzer_t&)
 class [01;36m[Kanalyzer_t[m[K {
       [01;36m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[Kcandidate: analyzer_t::analyzer_t(analyzer_t&&)
[01m[Kword_analyzer.h:9:7:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:5:1:[m[K [01;31m[Kerror: [m[Kprototype for â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™ does not match any in class â€˜[01m[Kanalyzer_t[m[Kâ€™
 [01;31m[Kanalyzer_t[m[K::analyzer_t() {
 [01;31m[K^~~~~~~~~~[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:9:7:[m[K [01;31m[Kerror: [m[Kcandidates are: analyzer_t::analyzer_t(analyzer_t&&)
 class [01;31m[Kanalyzer_t[m[K {
       [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.h:9:7:[m[K [01;31m[Kerror: [m[K                analyzer_t::analyzer_t(const analyzer_t&)
[01m[Kword_analyzer.h:19:5:[m[K [01;31m[Kerror: [m[K                analyzer_t::analyzer_t(std::__cxx11::string, std::__cxx11::string, std::__cxx11::string)
     [01;31m[Kanalyzer_t[m[K(string file, string file2, string file3);
     [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kentry_file[m[Kâ€™ was not declared in this scope
   if (![01;31m[Kentry_file[m[K.is_open()) {
        [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KEntry_file[m[Kâ€™
   if (![01;36m[Kentry_file[m[K.is_open()) {
        [01;36m[K^~~~~~~~~~[m[K
        [32m[KEntry_file[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Write(char&, const char [4], std::__cxx11::string&)[m[Kâ€™
       match_int? Write(file2, "INT", word[01;31m[K)[m[K;
                                          [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;36m[KWrite[m[K(char* file, string type);
          [01;36m[K^~~~~[m[K
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write(file2, "INT", word)[01;31m[K;[m[K
                                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Write(char&, const char [6], std::__cxx11::string&)[m[Kâ€™
       match_float? Write(file2, "FLOAT", word[01;31m[K)[m[K;
                                              [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;36m[KWrite[m[K(char* file, string type);
          [01;36m[K^~~~~[m[K
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write(file2, "FLOAT", word)[01;31m[K;[m[K
                                               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kprototype for â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™ does not match any in class â€˜[01m[Kanalyzer_t[m[Kâ€™
 void [01;31m[Kanalyzer_t[m[K::Write(char file, string type, string pal) {
      [01;31m[K^~~~~~~~~~[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:21:10:[m[K [01;31m[Kerror: [m[Kcandidate is: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;31m[KWrite[m[K(char* file, string type);
          [01;31m[K^~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kentry_file[m[Kâ€™ was not declared in this scope
   if (![01;31m[Kentry_file[m[K.is_open()) {
        [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KEntry_file[m[Kâ€™
   if (![01;36m[Kentry_file[m[K.is_open()) {
        [01;36m[K^~~~~~~~~~[m[K
        [32m[KEntry_file[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Write(char&, const char [4], std::__cxx11::string&)[m[Kâ€™
       match_int? Write(file2, "INT", word[01;31m[K)[m[K;
                                          [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;36m[KWrite[m[K(char* file, string type);
          [01;36m[K^~~~~[m[K
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_int? Write(file2, "INT", word)[01;31m[K;[m[K
                                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:71:43:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:72:46:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Write(char&, const char [6], std::__cxx11::string&)[m[Kâ€™
       match_float? Write(file2, "FLOAT", word[01;31m[K)[m[K;
                                              [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;36m[KWrite[m[K(char* file, string type);
          [01;36m[K^~~~~[m[K
[01m[Kword_analyzer.h:21:10:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K:[m[Kâ€™ before â€˜[01m[K;[m[Kâ€™ token
       match_float? Write(file2, "FLOAT", word)[01;31m[K;[m[K
                                               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:72:47:[m[K [01;31m[Kerror: [m[Kexpected primary-expression before â€˜[01m[K;[m[Kâ€™ token
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kprototype for â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™ does not match any in class â€˜[01m[Kanalyzer_t[m[Kâ€™
 void [01;31m[Kanalyzer_t[m[K::Write(char file, string type, string pal) {
      [01;31m[K^~~~~~~~~~[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:21:10:[m[K [01;31m[Kerror: [m[Kcandidate is: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;31m[KWrite[m[K(char* file, string type);
          [01;31m[K^~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kentry_file[m[Kâ€™ was not declared in this scope
   if (![01;31m[Kentry_file[m[K.is_open()) {
        [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KEntry_file[m[Kâ€™
   if (![01;36m[Kentry_file[m[K.is_open()) {
        [01;36m[K^~~~~~~~~~[m[K
        [32m[KEntry_file[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:71:48:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Write(char&, const char [4], std::__cxx11::string&)[m[Kâ€™
       if (match_int) { Write(file2, "INT", word[01;31m[K)[m[K; }
                                                [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:23:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;36m[KWrite[m[K(char* file, string type);
          [01;36m[K^~~~~[m[K
[01m[Kword_analyzer.h:23:10:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
[01m[Kword_analyzer.cpp:72:52:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kanalyzer_t::Write(char&, const char [6], std::__cxx11::string&)[m[Kâ€™
       if (match_float) { Write(file2, "FLOAT", word[01;31m[K)[m[K; }
                                                    [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:23:10:[m[K [01;36m[Knote: [m[Kcandidate: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;36m[KWrite[m[K(char* file, string type);
          [01;36m[K^~~~~[m[K
[01m[Kword_analyzer.h:23:10:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 3 provided
[01m[Kword_analyzer.cpp:[m[K At global scope:
[01m[Kword_analyzer.cpp:82:6:[m[K [01;31m[Kerror: [m[Kprototype for â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™ does not match any in class â€˜[01m[Kanalyzer_t[m[Kâ€™
 void [01;31m[Kanalyzer_t[m[K::Write(char file, string type, string pal) {
      [01;31m[K^~~~~~~~~~[m[K
In file included from [01m[Kword_analyzer.cpp:3:0[m[K:
[01m[Kword_analyzer.h:23:10:[m[K [01;31m[Kerror: [m[Kcandidate is: void analyzer_t::Write(char*, std::__cxx11::string)
     void [01;31m[KWrite[m[K(char* file, string type);
          [01;31m[K^~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kentry_file[m[Kâ€™ was not declared in this scope
   if (![01;31m[Kentry_file[m[K.is_open()) {
        [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KEntry_file[m[Kâ€™
   if (![01;36m[Kentry_file[m[K.is_open()) {
        [01;36m[K^~~~~~~~~~[m[K
        [32m[KEntry_file[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream Exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:93:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kexit_file[m[Kâ€™ was not declared in this scope
     [01;31m[Kexit_file[m[K << type << pal << endl;
     [01;31m[K^~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:93:5:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KExit_file[m[Kâ€™
     [01;36m[Kexit_file[m[K << type << pal << endl;
     [01;36m[K^~~~~~~~~[m[K
     [32m[KExit_file[m[K
[01m[Kword_analyzer.cpp:94:1:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K}[m[Kâ€™ at end of input
 [01;31m[K}[m[K
 [01;31m[K^[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kentry_file[m[Kâ€™ was not declared in this scope
   if (![01;31m[Kentry_file[m[K.is_open()) {
        [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KEntry_file[m[Kâ€™
   if (![01;36m[Kentry_file[m[K.is_open()) {
        [01;36m[K^~~~~~~~~~[m[K
        [32m[KEntry_file[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream Exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:94:1:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K}[m[Kâ€™ at end of input
 [01;31m[K}[m[K
 [01;31m[K^[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kentry_file[m[Kâ€™ was not declared in this scope
   if (![01;31m[Kentry_file[m[K.is_open()) {
        [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:54:8:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KEntry_file[m[Kâ€™
   if (![01;36m[Kentry_file[m[K.is_open()) {
        [01;36m[K^~~~~~~~~~[m[K
        [32m[KEntry_file[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream Exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:68:7:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kentry_file[m[Kâ€™ was not declared in this scope
       [01;31m[Kentry_file[m[K >> word;
       [01;31m[K^~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:68:7:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[KEntry_file[m[Kâ€™
       [01;36m[Kentry_file[m[K >> word;
       [01;36m[K^~~~~~~~~~[m[K
       [32m[KEntry_file[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream Exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:22:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™:
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:495:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ifstream<_CharT, _Traits>::basic_ifstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ifstream[m[K(const char* __s, ios_base::openmode __mode = ios_base::in)
       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
   ofstream Exit_file(file, fstream::app[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[Kword_analyzer.h:4:0[m[K,
                 from [01m[Kword_analyzer.cpp:3[m[K:
[01m[K/usr/include/c++/7/fstream:697:7:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kstd::basic_ofstream<_CharT, _Traits>::basic_ofstream(const char*, std::ios_base::openmode) [with _CharT = char; _Traits = std::char_traits<char>; std::ios_base::openmode = std::_Ios_Openmode][m[Kâ€™
       [01;36m[Kbasic_ofstream[m[K(const char* __s,
       [01;36m[K^~~~~~~~~~~~~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char file, char file2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™:
[01m[Kword_analyzer.cpp:7:15:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Esp[m[Kâ€™ has initializer but incomplete type
   ifstream Esp[01;31m[K([m[K"ESPECIALES.txt");
               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:8:16:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Sign[m[Kâ€™ has initializer but incomplete type
   ifstream Sign[01;31m[K([m[K"SIGNO.txt");
                [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:9:16:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Oper[m[Kâ€™ has initializer but incomplete type
   ifstream Oper[01;31m[K([m[K"OPERADORES.txt");
                [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Entry_file[m[Kâ€™ has initializer but incomplete type
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:22:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ofstream Exit_file[m[Kâ€™ has initializer but incomplete type
   ofstream Exit_file([01;31m[Kfile[m[K, fstream::app);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:84:37:[m[K [01;31m[Kerror: [m[Kincomplete type â€˜[01m[Kstd::fstream {aka std::basic_fstream<char>}[m[Kâ€™ used in nested name specifier
   ofstream Exit_file(file, fstream::[01;31m[Kapp[m[K);
                                     [01;31m[K^~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char fich, char fich2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[KAnalyzer.cpp:21:40:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     T.Comparation(Entry_File, Exit_File[01;31m[K)[m[K;
                                        [01;31m[K^[m[K
In file included from [01m[KAnalyzer.cpp:5:0[m[K:
[01m[Kword_analyzer.h:20:10:[m[K [01;36m[Knote: [m[K  initializing argument 2 of â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™
     void [01;36m[KComparation[m[K(char fich, char fich2);
          [01;36m[K^~~~~~~~~~~[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™:
[01m[Kword_analyzer.cpp:7:15:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Esp[m[Kâ€™ has initializer but incomplete type
   ifstream Esp[01;31m[K([m[K"ESPECIALES.txt");
               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:8:16:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Sign[m[Kâ€™ has initializer but incomplete type
   ifstream Sign[01;31m[K([m[K"SIGNO.txt");
                [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:9:16:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Oper[m[Kâ€™ has initializer but incomplete type
   ifstream Oper[01;31m[K([m[K"OPERADORES.txt");
                [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Entry_file[m[Kâ€™ has initializer but incomplete type
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:22:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ofstream Exit_file[m[Kâ€™ has initializer but incomplete type
   ofstream Exit_file([01;31m[Kfile[m[K, fstream::app);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:84:37:[m[K [01;31m[Kerror: [m[Kincomplete type â€˜[01m[Kstd::fstream {aka std::basic_fstream<char>}[m[Kâ€™ used in nested name specifier
   ofstream Exit_file(file, fstream::[01;31m[Kapp[m[K);
                                     [01;31m[K^~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ clear
[3J[H[2J]0;~/Practica 2[01;34m~/Practica 2[00m$ clearg++ Analyzer.cpp word_analyzer.cpp 
[01m[KAnalyzer.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[KAnalyzer.cpp:17:29:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     char Entry_File = [01;31m[Kargv[1][m[K;
                       [01;31m[K~~~~~~^[m[K
[01m[KAnalyzer.cpp:18:28:[m[K [01;31m[Kerror: [m[Kinvalid conversion from â€˜[01m[Kchar*[m[Kâ€™ to â€˜[01m[Kchar[m[Kâ€™ [[01;31m[K-fpermissive[m[K]
     char Exit_File = [01;31m[Kargv[2][m[K;
                      [01;31m[K~~~~~~^[m[K
[01m[Kword_analyzer.cpp:[m[K In constructor â€˜[01m[Kanalyzer_t::analyzer_t()[m[Kâ€™:
[01m[Kword_analyzer.cpp:7:15:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Esp[m[Kâ€™ has initializer but incomplete type
   ifstream Esp[01;31m[K([m[K"ESPECIALES.txt");
               [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:8:16:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Sign[m[Kâ€™ has initializer but incomplete type
   ifstream Sign[01;31m[K([m[K"SIGNO.txt");
                [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:9:16:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Oper[m[Kâ€™ has initializer but incomplete type
   ifstream Oper[01;31m[K([m[K"OPERADORES.txt");
                [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         sign_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:32:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         sign_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kword[m[Kâ€™ was not declared in this scope
         oper_.insert([01;31m[Kword[m[K);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:41:22:[m[K [01;36m[Knote: [m[Ksuggested alternative: â€˜[01m[Kvoid[m[Kâ€™
         oper_.insert([01;36m[Kword[m[K);
                      [01;36m[K^~~~[m[K
                      [32m[Kvoid[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:52:27:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ifstream Entry_file[m[Kâ€™ has initializer but incomplete type
   ifstream Entry_file(file[01;31m[K)[m[K;
                           [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:64:20:[m[K [01;31m[Kerror: [m[Kexpected identifier before â€˜[01m[K:[m[Kâ€™ token
     regex decimal([[01;31m[K:[m[Kd:]);
                    [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In lambda function:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
     regex decimal([:d:][01;31m[K)[m[K;
                        [01;31m[K^[m[K
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Comparation(char, char)[m[Kâ€™:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::__cxx11::basic_regex<char>::basic_regex(analyzer_t::Comparation(char, char)::<lambda()>)[m[Kâ€™
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::locale_type, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last, locale_type __loc,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:763:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 4 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::initializer_list<_Tp>, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:523:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::initializer_list<char>[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _FwdIter> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(_FwdIter, _FwdIter, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(_FwdIter __first, _FwdIter __last,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:510:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Ch_traits, class _Ch_alloc> std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_string<_Ch_type, _Ch_traits, _Ch_alloc>&, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type)
  [01;36m[Kbasic_regex[m[K(const std::basic_string<_Ch_type, _Ch_traits,
  [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:490:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[Kword_analyzer.cpp:64:24:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ is not derived from â€˜[01m[Kconst std::__cxx11::basic_string<char, _Ch_traits, _Ch_alloc>[m[Kâ€™
     regex decimal([:d:][01;36m[K)[m[K;
                        [01;36m[K^[m[K
In file included from [01m[K/usr/include/c++/7/regex:62:0[m[K,
                 from [01m[Kword_analyzer.cpp:1[m[K:
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(basic_regex&& __rhs) noexcept = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:477:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kstd::__cxx11::basic_regex<char>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >&) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K(const basic_regex& __rhs) = default;
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:470:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst std::__cxx11::basic_regex<char>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::size_t, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::size_t = long unsigned int; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, std::size_t __len,
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:460:7:[m[K [01;36m[Knote: [m[K  candidate expects 3 arguments, 1 provided
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex(const _Ch_type*, std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type) [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>; std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::flag_type = std::regex_constants::syntax_option_type]
       [01;36m[Kbasic_regex[m[K(const _Ch_type* __p, flag_type __f = ECMAScript)
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:444:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kanalyzer_t::Comparation(char, char)::<lambda()>[m[Kâ€™ to â€˜[01m[Kconst char*[m[Kâ€™
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[Kcandidate: std::__cxx11::basic_regex< <template-parameter-1-1>, <template-parameter-1-2> >::basic_regex() [with _Ch_type = char; _Rx_traits = std::__cxx11::regex_traits<char>]
       [01;36m[Kbasic_regex[m[K()
       [01;36m[K^~~~~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/regex.h:428:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[01m[Kword_analyzer.cpp:[m[K In member function â€˜[01m[Kvoid analyzer_t::Write(char, std::__cxx11::string, std::__cxx11::string)[m[Kâ€™:
[01m[Kword_analyzer.cpp:84:22:[m[K [01;31m[Kerror: [m[Kvariable â€˜[01m[Kstd::ofstream Exit_file[m[Kâ€™ has initializer but incomplete type
   ofstream Exit_file([01;31m[Kfile[m[K, fstream::app);
                      [01;31m[K^~~~[m[K
[01m[Kword_analyzer.cpp:84:37:[m[K [01;31m[Kerror: [m[Kincomplete type â€˜[01m[Kstd::fstream {aka std::basic_fstream<char>}[m[Kâ€™ used in nested name specifier
   ofstream Exit_file(file, fstream::[01;31m[Kapp[m[K);
                                     [01;31m[K^~~[m[K
]0;~/Practica 2[01;34m~/Practica 2[00m$ ]0;~/Practica 2[01;34m~/Practica 2[00m$ 